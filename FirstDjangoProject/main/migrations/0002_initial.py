# Generated by Django 4.0.5 on 2022-08-03 13:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('address', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.user',),
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('description', models.CharField(max_length=250, verbose_name='Описание')),
                ('price', models.IntegerField(default=0, verbose_name='Цена')),
                ('in_stock', models.IntegerField(default=0, verbose_name='В запасе')),
                ('img', models.ImageField(default=1659533919.895123, upload_to='uploads/')),
                ('category', models.ManyToManyField(to='main.category')),
                ('content_type', models.ForeignKey(default=50, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Blender',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.product')),
                ('volume', models.IntegerField(default=1, verbose_name='Объем')),
                ('fan_speed', models.IntegerField(default=500, verbose_name='Скорость вентилятора')),
            ],
            bases=('main.product',),
        ),
        migrations.CreateModel(
            name='Combine',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.product')),
                ('volume', models.IntegerField(default=2, verbose_name='Объем')),
                ('max_power', models.IntegerField(default=50, verbose_name='Мощность')),
            ],
            bases=('main.product',),
        ),
        migrations.CreateModel(
            name='Fridge',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.product')),
                ('height', models.IntegerField(default=100, verbose_name='Высота')),
                ('width', models.IntegerField(default=50, verbose_name='Ширина')),
                ('length', models.IntegerField(default=60, verbose_name='Длина')),
            ],
            bases=('main.product',),
        ),
        migrations.CreateModel(
            name='Mixer',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.product')),
                ('mixer_type', models.CharField(max_length=50, verbose_name='Тип Миксера')),
                ('fan_speed', models.IntegerField(default=1000, verbose_name='Скорость вентилятора')),
                ('bowl_size', models.IntegerField(default=5, verbose_name='Размер чаши')),
            ],
            bases=('main.product',),
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.product')),
                ('height', models.IntegerField(default=100, verbose_name='Высота')),
                ('width', models.IntegerField(default=50, verbose_name='Ширина')),
                ('length', models.IntegerField(default=60, verbose_name='Длина')),
            ],
            bases=('main.product',),
        ),
        migrations.CreateModel(
            name='Teapot',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.product')),
                ('volume', models.IntegerField(default=2, verbose_name='Объем')),
                ('max_power', models.IntegerField(default=70, verbose_name='Мощность')),
            ],
            bases=('main.product',),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.IntegerField(default=0)),
                ('total_quantity', models.IntegerField(default=0)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='customer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer'),
        ),
        migrations.AddField(
            model_name='cart',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product'),
        ),
    ]
